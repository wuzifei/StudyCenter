;

			try
			{
				ClassWithCompositeId theClass4 = (ClassWithCompositeId) s4.Load(typeof(ClassWithCompositeId), id);
			}
			catch (ObjectNotFoundException onfe)
			{
				// I expect this to be thrown because the object no longer exists...
				Assert.IsNotNull(onfe); //getting ride of 'onfe' is never used compile warning
			}

			IList results = s4.CreateCriteria(typeof(ClassWithCompositeId))
				.Add(Expression.Eq("Id", secondId))
				.List();

			Assert.AreEqual(0, results.Count);

			s4.Close();
		}

		[Test]
		public void Criteria()
		{
			Id id = new Id("stringKey", 3, firstDateTime);
			ClassWithCompositeId cId = new ClassWithCompositeId(id);
			cId.OneProperty = 5;

			// add the new instance to the session so I have something to get results 
			// back for
			ISession s = OpenSession();
			s.Save(cId);
			s.Flush();
			s.Close();

			s = OpenSession();
			ICriteria c = s.CreateCriteria(typeof(ClassWithCompositeId));
			c.Add(Expression.Eq("Id", id));

			// right now just want to see if the Criteria is valid
			IList results = c.List();

			Assert.AreEqual(1, results.Count);

			s.Close();
		}

		[Test]
		public void Hql()
		{
			// insert the new objects
			ISession s = OpenSession();
			ITransaction t = s.BeginTransaction();

			ClassWithCompositeId theClass = new ClassWithCompositeId(id);
			theClass.OneProperty = 5;

			ClassWithCompositeId theSecondClass = new ClassWithCompositeId(secondId);
			theSecondClass.OneProperty = 10;

			s.Save(theClass);
			s.Save(theSecondClass);

			t.Commit();
			s.Close();

			ISession s2 = OpenSession();

			IQuery hql = s2.CreateQuery("from ClassWithCompositeId as cwid where cwid.Id.KeyString = 