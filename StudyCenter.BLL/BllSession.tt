<#@ template language="C#" debug="true" hostSpecific="true" #>
<#@ Assembly Name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs"#>
 
<#

	CodeGenerationTools code = new CodeGenerationTools(this);
	MetadataLoader loader = new MetadataLoader(this);
	CodeRegion region = new CodeRegion(this, 1);
	MetadataTools ef = new MetadataTools(this);

	//选择要操作的edmx路径
	string inputFile = @"..\\StudyCenter.Model\\Model.edmx";

	EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
	string namespaceName = code.VsNamespaceSuggestion();
	EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using StudyCenter.Model;
using StudyCenter.DalFactory;
using StudyCenter.IBLL;
using StudyCenter.IDAL;

namespace StudyCenter.BLL
{
    /// <summary>
    /// 业务仓储,提供所有Dal的入口
    /// </summary>
   	 public partial class BllSession:IBllSession
    {
<#
// Emit Entity Types

foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>
		private I<#= entity.Name #>Service _<#=entity.Name#>;
		public I<#= entity.Name #>Service <#=entity.Name#>Service 
		{
			get
			{
				if( _<#=entity.Name#> !=null)
					return  _<#=entity.Name#>;
				 _<#=entity.Name#> = new  <#=entity.Name#>Service();
				 return  _<#=entity.Name#>;
			}
		}
  	
<#}#>
	}
	
}